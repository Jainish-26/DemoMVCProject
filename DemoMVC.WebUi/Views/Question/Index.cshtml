@model IEnumerable<DemoMVC.Models.QuestionGridModel>
@using DemoMVC.Models
@using DemoMVC.WebUi.Helper
@using DemoMVC.WebUi.Controllers
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Index";
    string role = SessionHelper.RoleName;
    string formCode = AuthorizeFormAccess.FormAccessCode.QUESTION.ToString();
    var formName = FormUtility.GetFormName(formCode);
    string parentFormname = FormUtility.GetParentFormName(formCode);
    ViewBag.Title = formName;
    BaseController _base = new BaseController();
    bool AllowedEdit = _base.CheckPermission(formCode, AccessPermission.IsEdit);
    bool AllowedAdd = _base.CheckPermission(formCode, AccessPermission.IsAdd);
    bool AllowedDelete = _base.CheckPermission(formCode, AccessPermission.IsDelete);
}
<style>
    .grid-image {
        width: 50px;
        height: 50px;
        object-fit: cover; /* Ensures the image fills the space without distortion */
        display: inline-block;
        text-align: center;
        font-size: 50px; /* Adjust for the icon */
        color: gray; /* Icon color */
    }
    #gridSearchBox {
        min-width: 250px;
        margin-left: 15px;
        min-height: 38px;
    }
        #gridSearchBox::placeholder {
            color: #6c757d; /* Light gray placeholder color */
            opacity: 1; /* Ensure placeholder is visible */
        }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<div class="d-flex justify-content-between align-items-center m-2">
    <h2 class="fw-bold mx-3">Question Bank</h2>
    <div class="d-flex align-items-center gap-3">
        @Html.TextBox("gridSearchBox", null, new { @class = "form-control", placeholder = "Search...", style = "width: 250px;" })
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-warning btn rounded-pill px-4 shadow-sm fw-bold m-3" })

    </div>
</div>

<div class="common_white_box listingpage m-4">
    <div class="page-loader k-loading-image"></div>
    @(Html.Kendo().Grid<DemoMVC.Models.QuestionGridModel>()
            .Name("gridQuestion")
            .AutoBind(false)
            .Columns(columns =>
            {
                columns.Bound(c => c.Subject).Width("7%").Title("Subject");
                columns.Bound(c => c.Type).Width("7%").Title("Answer Type");
                columns.Bound(c => c.QuestionText).Width("50%").Title("Question")
                .ClientTemplate("<span>#:QuestionText.substring(0, 80) #</span>");
                columns.Bound(c => c.Difficulty).Width("7%").Title("Difficulty").ClientTemplate("#if(BadgeCode!=null && BadgeCode!=''){#" + "<span class='status' style='background:#=BadgeCode#'>#=Difficulty#</span>#} else {# #=Difficulty# #}#");
                columns.Bound(c => c.Marks).Width("7%").Title("Marks");
                columns.Bound(c => c.IsActive)
                .Width("5%")
                .HeaderHtmlAttributes(new { @class = "center_text" })
                .HtmlAttributes(new { @class = "kendogrid_Action center-text" })
                .ClientTemplate("# if(IsActive == true) {#<i class='fa fa-check'></i># } else { #<i class='fa fa-close' style='color: red;'></i># } #")
                .Title("Active")
                .Filterable(filterable => filterable.Messages(m => m.IsFalse("No").IsTrue("Yes")));
                if (role == "sadmin")
                {
                    columns.Bound(c => c.QuestionId)
                    .HeaderHtmlAttributes(new { @class = "center_text" })
                    .HtmlAttributes(new { @class = "kendogrid_Action center_text" })
                    .ClientTemplate("<div class='k_action_table'>" +
                        (AllowedEdit ? "<a href='javascript:void(0);' title='Edit Details' onclick=\"fnEditQuestion(#=QuestionId#)\"><i class='fa fa-edit'></i></a> " : "") +
                        (AllowedDelete ? " <a href='javascript:void(0);' title='Delete' onclick='confirmDelete(#=QuestionId#)'><i class='fa fa-trash'></i></a>" : "") +
                        (AllowedEdit ? "<a href='javascript:void()' onclick=\"fnShowDetails(#= QuestionId #)\"><i class='fa fa-eye'></i></a>":" ")+
                        "</div>")
                        .Filterable(false)
                        .Title("Action")
                        .Width("8%")
                        .Sortable(false);
                }
            })

            .NoRecords("No record found")
            .Events(evt => evt
               .DataBinding("fnKendoGridCommonDataBinding")
               .DataBound("fnKendoGridDataBoundEvent")
            )
            .Sortable()
            .Filterable(filter => filter
                .Mode(GridFilterMode.Row)
                .Extra(false)
                .Operators(o => o.ForString(f => f.Clear().Contains("Contains").DoesNotContain("Does Not Contain").StartsWith("Starts With").EndsWith("Ends With").IsEqualTo("Equal To").IsNotEqualTo("Not Equal To")))
                .Operators(o => o.ForNumber(g => g.Clear().IsEqualTo("EqualTo").IsNotEqualTo("Not Equal To").IsGreaterThan("Greater Than").IsGreaterThanOrEqualTo("Greater Than Or Equal To").IsLessThan("Less Than").IsLessThanOrEqualTo("Less Than Or Equal To")))
            )
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(new[] {10,20, 50, 100, 200 })
                .ButtonCount(5)
            )
             .DataSource(dataSource => dataSource
                 .Ajax()
                 .Read(read => read.Action("GetGridData", "Question").Data("getFilterData"))
                 .PageSize(10)
             )
        )
</div>

<div id="imageModalContainer"></div>
<div id="questionModelContainer"></div>
<script>
    function getFilterData() {
        return {
            searchTerm: $("#gridSearchBox").val()
        };
    }
    $(document).ready(function () {
        $('#gridQuestion').data('kendoGrid').dataSource.read();
        $('#gridQuestion').data('kendoGrid').refresh();
    });
    $('#gridSearchBox').on('input', function () {
        $('#gridQuestion').data('kendoGrid').dataSource.read();
    });
    
    //Delete Questions
    function confirmDelete(roleId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'This Question will be permanently deleted!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '@Url.Action("Delete", "Question")',
                type: 'POST',
                data: { id: roleId },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Question deleted successfully.',
                            showConfirmButton: false,
                            timer: 2000
                        });
                        $('#gridQuestion').data('kendoGrid').dataSource.read();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message,
                            confirmButtonColor: '#d33'
                        });
                    }
                }
            });
        }
    });
    }
    function fnShowDetails(QuestionId) {
        $.ajax({
            url: '@Url.Action("GetQuestionDetails","Question")',
            type: 'GET',
            data: { id: QuestionId },
            success: function (response) {
                $("#questionModelContainer").html(response);
                $("#questionDetailsModal").modal("show");

                $('#questionDetailsModal').on('hidden.bs.modal', function () {
                    $('#questionModelContainer').html('');
                });
            },
            error: function () {
                alert(" Failed To Load Data");
            }
        });
    }
    function fnEditQuestion(questionId) {
        $.ajax({
            url: '/Question/CheckQuestionInExam',
            type: 'GET',
            data: { questionId: questionId },
            success: function (response) {
                if (response.success) {

                    window.location.href = '/Question/Create/' + response.questionId;
                } else {

                    Swal.fire("Warning", response.message, "warning");
                }
            },
            error: function () {
                Swal.fire("Error", "Something went wrong!", "error");
            }
        });
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



