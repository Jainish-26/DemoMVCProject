@model DemoMVC.WebUi.Models.QuestionTypeModel
@using DemoMVC.Models
@using DemoMVC.WebUi.Helper
@{
    ViewBag.Title = Model.Id > 0 ? "Edit Question Type" : "Add Question Type";
    string formCode = AuthorizeFormAccess.FormAccessCode.QUESTIONTYPE.ToString();
    var formName = FormUtility.GetFormName(formCode);
    string parentFormname = FormUtility.GetParentFormName(formCode);
    ViewBag.Title = formName;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Admin</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- FontAwesome Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        body {
            background-color: #f8f9fa;
        }

        .breadcrumb_list {
            margin:20px 120px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

            .breadcrumb_list ul {
                list-style: none;
                padding: 0;
                margin: 0;
                display: flex;
                gap: 10px;
            }

                .breadcrumb_list ul li {
                    display: inline;
                }

                    .breadcrumb_list ul li a {
                        text-decoration: none;
                    }

        .form-container {
            max-width: 450px;
            min-height : 300px;
            background: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
        }
        .btn-primary {
            width: auto;
            padding: 10px 20px;
            border-radius: 5px;
            font-weight: 500;
            display: block;
            margin: auto;
            margin-top:15px;
        }
        .form-control {
            height: 40px !important; /* Adjust height as needed */
        }
    </style>
</head>
<body>
    <div class="breadcrumb_list">
        <ul>
            <li><a href="@Url.Action("Index","QuestionType")"><i class="fa fa-home"></i></a></li>
            <li><a href="javascript:void(0)">@parentFormname</a></li>
            <li>@formName</li>
        </ul>
    </div>

    <div class="container">
        <div class="form-container">
            <h2 class="text-center"><i class="fa fa-book"></i> @ViewBag.Title</h2>
            @Html.Hidden("hdnFormAccessCode", formCode)
            @using (Html.BeginForm("Create", "QuestionType", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.AntiForgeryToken()

                <!-- Name -->
                <div class="mb-3">
                    <label class="form-label">Name <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-bookmark"></i></span>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter Name" , @style = "height: 40px;" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <!-- Code -->
                <div class="mb-3">
                    <label class="form-label">Code <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa fa-code"></i></span>
                        @if (Model.Id > 0)
                        {
                            @Html.TextBoxFor(model => model.QuestionTypeCode, new { @class = "form-control", @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.QuestionTypeCode, new { @class = "form-control text-uppercase", placeholder = "Enter Code" })
                        }
                    </div>
                    @Html.ValidationMessageFor(model => model.QuestionTypeCode, "", new { @class = "text-danger" })
                </div>

                <!-- Submit & Back Buttons -->
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
