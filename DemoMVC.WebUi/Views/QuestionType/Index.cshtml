@using DemoMVC.Service
@using Kendo.Mvc.UI
@using DemoMVC.Models
@using DemoMVC.WebUi.Helper
@using DemoMVC.WebUi.Controllers

@model IEnumerable<DemoMVC.Models.QuestionTypesGridModel>

@{
    RoleService _roleService = new RoleService();
    string role = _roleService.GetRolesById(SessionHelper.RoleId).RoleName;
    string formCode = AuthorizeFormAccess.FormAccessCode.QUESTIONTYPE.ToString();
    var formName = FormUtility.GetFormName(formCode);
    string parentFormname = FormUtility.GetParentFormName(formCode);
    ViewBag.Title = formName;
    BaseController _base = new BaseController();
    bool AllowedEdit = _base.CheckPermission(formCode, AccessPermission.IsEdit);
    bool AllowedAdd = _base.CheckPermission(formCode, AccessPermission.IsAdd);
    bool AllowedDelete = _base.CheckPermission(formCode, AccessPermission.IsDelete);
}

<div class="d-flex justify-content-between align-items-center m-2">
    <h2 class="fw-bold mx-3 ">Question Types</h2>
    <div>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-warning btn rounded-pill px-4 shadow-sm fw-bold m-3" })
    </div>
</div>
<div class="common_white_box listingpage m-4">
    <div class="page-loader k-loading-image"></div>
    @(Html.Kendo().Grid<DemoMVC.Models.QuestionTypesGridModel>()
          .Name("gridQuestionType")
          .AutoBind(false)
          .Columns(columns =>
          {
              columns.Bound(c => c.Name).Title("Name");
              columns.Bound(c => c.QuestionTypeCode).Title("Subject Code");
              if (role == "sadmin")
              {
                  columns.Bound(c => c.Id).HeaderHtmlAttributes(new { @class = "center_text" }).HtmlAttributes(new { @class = "kendogrid_Action center_text" }).ClientTemplate("<div class='k_action_table'>" + (AllowedEdit ? "<a title='Edit' href='" + Url.Action("Create", "QuestionType") + "/#=Id#'" + "><i class='fa fa-edit'></i></a>" : "") + "</div>").Filterable(false).Title("Action").Width("5%").Sortable(false);
                  //columns.Bound(c => c.Id).HeaderHtmlAttributes(new { @class = "center_text" }).HtmlAttributes(new { @class = "kendogrid_Action center_text" }).ClientTemplate("<div class='k_action_table'>" + (AllowedDelete ? "<button title='Delete' class='btn btn-sm btn-danger' onclick='confirmDelete(#=Id#)'>Delete</button>" : "") +
                  //"</div>").Filterable(false).Title("Delete").Width("5%").Sortable(false);
              }
              else
              {
                  columns.Bound(c => c.Id).HeaderHtmlAttributes(new { @class = "center_text" }).HtmlAttributes(new { @class = "kendogrid_Action center_text" }).ClientTemplate("<div class='k_action_table'>" + (AllowedEdit ? "<a title='Edit' href='" + Url.Action("Create", "QuestionType") + "/#=Id#'" + "><i class='fa fa-edit'></i></a>" : "") + "</div>").Filterable(false).Title("Action").Width("5%").Sortable(false);
              }
          })
          .Events(evt => evt
              .DataBinding("fnKendoGridCommonDataBinding")
              .DataBound("fnKendoGridDataBoundEvent")
          )
          .NoRecords("No record found")
          .Sortable()
          .Pageable(pageable => pageable
              .Refresh(true)
              .PageSizes(new[] {10,20, 50, 100, 200 })
              .ButtonCount(5)
          )
          .DataSource(dataSource => dataSource
              .Ajax()
              .Read(read => read.Action("GetGridData", "QuestionType")).PageSize(10)
          ))
</div>

<script>
    $(document).ready(function () {
        $('#gridQuestionType').data('kendoGrid').dataSource.read();
        $('#gridQuestionType').data('kendoGrid').refresh();

    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
