@model DemoMVC.WebUi.Models.UserProfileModel
@using DemoMVC.Models
@using Kendo.Mvc.UI
@{
    string formCode = AuthorizeFormAccess.FormAccessCode.USER.ToString();
    if (Model.UserId > 0)
    {
        ViewBag.Title = "Edit User";
    }
    else
    {
        ViewBag.Title = "Add User";
    }
}

<!-- Bootstrap 5 -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- FontAwesome for Icons -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>

<style>
    body {
        background-color: #f5f5f5;
    }

    .form-container {
        max-width: 900px;
        background: white;
        border-radius: 10px;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    /* Side Image Styling */
    .side-image {
        background: url('https://thumbs.dreamstime.com/z/vertical-photo-collage-happy-businesswoman-jump-puzzle-piece-jigsaw-work-development-project-isolated-painted-background-356468952.jpg?ct=jpeg')
                    center center / cover no-repeat;
        min-height: 100%;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    /* Form Header */
    .form-header {
        background-color: #27ae60;
        padding: 20px;
        text-align: center;
        color: white;
        font-size: 22px;
        font-weight: bold;
    }

    /* Form Styling */
    .form-body {
        padding: 40px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .input-group-text {
        background-color: #ff9800;
        color: white;
        border: none;
    }

    .form-control {
        border-radius: 5px;
        padding: 12px;
        border: 1px solid #ccc;
    }

    .form-control:focus {
        border-color: #27ae60;
        box-shadow: 0 0 5px rgba(39, 174, 96, 0.5);
    }

    .form-check-input {
        background-color: #9b59b6;
        border-color: #9b59b6;
    }

    .btn-primary {
        background-color: #27ae60;
        border: none;
    }

    .btn-danger {
        background-color: #e74c3c;
        border: none;
    }

    /* Align Is Active checkbox */
    .toggle-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .toggle-input {
        display: none;
    }

    .toggle-switch {
        width: 50px;
        height: 25px;
        background-color: #ccc;
        border-radius: 15px;
        position: relative;
        cursor: pointer;
        transition: background 0.3s;
    }

        .toggle-switch::before {
            content: "";
            position: absolute;
            width: 20px;
            height: 20px;
            background-color: white;
            border-radius: 50%;
            top: 50%;
            left: 3px;
            transform: translateY(-50%);
            transition: 0.3s;
        }

    .toggle-input:checked + .toggle-switch {
        background-color: #27ae60;
    }

        .toggle-input:checked + .toggle-switch::before {
            left: calc(100% - 23px);
        }

    .toggle-label {
        font-size: 14px;
        color: #555;
    }

    /* Ensure alignment with other input fields */
    .is-active-group {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-top: 10px;
    }

    @@media (max-width: 768px) {
        .side-image {
            display: none;
        }
    }
</style>

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="row form-container">

                <!-- Left Side Image (Hidden on Small Screens) -->
                <div class="col-md-5 d-none d-md-block side-image"></div>

                <!-- Right Side Form -->
                <div class="col-md-7">
                    <div class="form-header">
                        @(Model.UserId > 0 ? "Edit User" : "Create New User")
                    </div>
                    <div class="form-body">
                        @Html.Hidden("hdnFormAccessCode", formCode)
                        @using (Html.BeginForm("Create", "UserProfile", FormMethod.Post, new { id = "frm", enctype = "multipart/form-data", @class = "needs-validation", novalidate = "true" }))
                        {
                            @Html.HiddenFor(m => m.UserId)

                            <!-- Role -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Role</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user-tag"></i></span>
                                    @Html.DropDownListFor(model => model.Role, Model._RoleList, new { @class = "form-select" })
                                </div>
                            </div>

                            <!-- Name -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Name</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter your full name" })
                                </div>
                            </div>

                            <!-- Username -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Username</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user-circle"></i></span>
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", placeholder = "Choose a username" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                            </div>

                            <!-- Email -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Email</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email", placeholder = "Enter email" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            <!-- Mobile No -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Mobile No</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                    @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", type = "tel", placeholder = "Enter mobile number" })
                                </div>
                            </div>

                            <!-- Phone No -->
                            <div class="form-group">
                                <label class="fw-bold text-success">Phone No</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-phone-alt"></i></span>
                                    @Html.TextBoxFor(model => model.PhoneNo, new { @class = "form-control", placeholder = "Enter phone number" })
                                </div>
                            </div>

                            <!-- Password (Only for new users) -->
                            if (Model.UserId == 0)
                            {
                                <div class="form-group">
                                    <label class="fw-bold text-success">Password</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter password" })
                                    </div>
                                </div>
                            }

                            <!-- Is Active (Side by Side) -->
                            <div class="form-group is-active-group">
                                <label class="fw-bold text-success" style=" margin-left:-30px">Is Active?</label>

                                <div class="toggle-container">
                                    <input type="checkbox" id="IsActiveToggle" class="toggle-input" @(Model.IsActive ? "checked" : "")>
                                    <label for="IsActiveToggle" class="toggle-switch" style=" margin-right:200px"></label>
                                    <label for="IsActiveToggle" class="toggle-label">@(Model.IsActive ? "Active" : "Inactive")</label>
                                </div>
                                @Html.HiddenFor(model => model.IsActive, new { @id = "IsActive" })
                            </div>

                            <!-- Submit Buttons -->
                            <div class="text-center mt-3">
                                <button type="submit" class="btn btn-primary px-4">Save</button>
                                <a href="@Url.Action("Index", "UserProfile")" class="btn btn-danger px-4">Cancel</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toggleInput = document.getElementById("IsActiveToggle");
        var hiddenInput = document.getElementById("IsActive");
        var label = document.querySelector(".toggle-label");

        function updateLabel() {
            if (toggleInput.checked) {
                label.textContent = "Active";
 
                hiddenInput.value = "True";
            } else {
                label.textContent = "Inactive";
                hiddenInput.value = "False";
            }
        }

        toggleInput.addEventListener("change", updateLabel);
        updateLabel(); // Set initial state
    });
</script>
